{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/todosFilter.ts","index.tsx"],"names":["Filter","TodoList","todos","selectTodo","selectedTodo","className","map","id","title","completed","type","onClick","TodoFilter","handleQuery","handleSearchValue","query","onChange","e","target","value","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todo","onCloseModal","useState","undefined","user","setUser","isLoading","setIsLoading","onSetUser","useCallback","userId","useEffect","href","name","App","setTodos","currentTodo","setCurrentTodo","sortBy","setSortBy","setQuery","fiteredTodos","prepearedQuery","trim","toLowerCase","filter","includes","todosFilter","getTodoList","finally","onSetTodo","find","s","q","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af8847cc.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n\nexport type SortType = {\n  sortBy: Filter,\n  query: string;\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectTodo: (id: number) => void,\n  selectedTodo: Todo | undefined,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(({ id, title, completed }) => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={id}\n        >\n          <td className=\"is-vcentered\">{id}</td>\n          <td className=\"is-vcentered\">\n            {\n              completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )\n            }\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={completed ? 'has-text-success' : 'has-text-danger'}\n            >\n              {title}\n\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(id)}\n            >\n              <span className=\"icon\">\n                <i className={`far ${selectedTodo?.id === id ? 'fa-eye-slash' : 'fa-eye'}`} />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Filter } from '../../types/Filter';\n\ninterface Props {\n  handleQuery: (e: Filter) => void,\n  handleSearchValue: (s: string) => void,\n  query: string,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleQuery,\n  handleSearchValue,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={e => handleQuery(e.target.value as Filter)}\n        >\n          <option value={Filter.All}>All</option>\n          <option value={Filter.Active}>Active</option>\n          <option value={Filter.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={(e) => handleSearchValue(e.target.value)}\n        value={query}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n        {\n          query && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                handleSearchValue('');\n              }}\n            />\n          )\n        }\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo | undefined,\n  onCloseModal: (id: number | undefined) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onCloseModal,\n}) => {\n  const [user, setUser] = useState<User | undefined>(undefined);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onSetUser = useCallback(() => {\n    if (todo === undefined) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    getUser(todo.userId).then(res => {\n      setUser(res);\n      setIsLoading(false);\n    });\n  }, [todo]);\n\n  useEffect(() => {\n    onSetUser();\n  }, [todo, onSetUser]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onCloseModal(undefined);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {`${todo?.title}`}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={\n                  todo?.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }\n              >\n                {todo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\nimport { todosFilter } from './utils/todosFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentTodo, setCurrentTodo] = useState<Todo | undefined>(undefined);\n  const [sortBy, setSortBy] = useState(Filter.All);\n  const [query, setQuery] = useState('');\n\n  const fiteredTodos = todosFilter(todos, { sortBy, query });\n\n  const getTodoList = () => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(res => {\n        setTodos(res);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getTodoList();\n  }, []);\n\n  const onSetTodo = (id: number | undefined) => {\n    if (id === undefined) {\n      setCurrentTodo(undefined);\n\n      return;\n    }\n\n    const selectedTodo = todos.find(todo => todo.id === id);\n\n    setCurrentTodo(selectedTodo);\n  };\n\n  const handleQuery = (s: Filter) => {\n    setSortBy(s);\n  };\n\n  const handleSearchValue = (q: string) => {\n    setQuery(q);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleQuery={handleQuery}\n                handleSearchValue={handleSearchValue}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={fiteredTodos}\n                    selectTodo={onSetTodo}\n                    selectedTodo={currentTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal\n          todo={currentTodo}\n          onCloseModal={onSetTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { Filter, SortType } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\nexport const todosFilter = (todos: Todo[], { sortBy, query }: SortType) => {\n  let res = [...todos];\n  const prepearedQuery = query.trim().toLowerCase();\n\n  switch (sortBy) {\n    case Filter.Active:\n      res = res.filter(todo => !todo.completed);\n      break;\n\n    case Filter.Completed:\n      res = res.filter(todo => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  if (prepearedQuery) {\n    return res\n      .filter(todo => todo.title.toLowerCase().includes(prepearedQuery));\n  }\n\n  return res;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}